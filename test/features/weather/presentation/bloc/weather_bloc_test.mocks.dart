// Mocks generated by Mockito 5.1.0 from annotations
// in weather/test/features/weather/presentation/bloc/weather_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:weather/core/error/failures.dart' as _i6;
import 'package:weather/core/location/get_lat_long.dart' as _i9;
import 'package:weather/core/usecases/weather_usecase/weather_params.dart'
    as _i8;
import 'package:weather/core/utils/lat_long.dart' as _i10;
import 'package:weather/features/weather/domain/entities/weather.dart' as _i7;
import 'package:weather/features/weather/domain/repositories/weather_repository.dart'
    as _i2;
import 'package:weather/features/weather/domain/usecases/get_weather.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWeatherRepository_0 extends _i1.Fake
    implements _i2.WeatherRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetWeather].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWeather extends _i1.Mock implements _i4.GetWeather {
  MockGetWeather() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WeatherRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeWeatherRepository_0()) as _i2.WeatherRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.Weather>> call(
          _i8.WeatherParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i3.Either<_i6.Failure, _i7.Weather>>.value(
                  _FakeEither_1<_i6.Failure, _i7.Weather>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i7.Weather>>);
}

/// A class which mocks [GetLatLongImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetLatLongImpl extends _i1.Mock implements _i9.GetLatLongImpl {
  MockGetLatLongImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Either<_i6.Failure, _i10.LatLong>> getLatLong() =>
      (super.noSuchMethod(Invocation.method(#getLatLong, []),
              returnValue: Future<_i3.Either<_i6.Failure, _i10.LatLong>>.value(
                  _FakeEither_1<_i6.Failure, _i10.LatLong>()))
          as _i5.Future<_i3.Either<_i6.Failure, _i10.LatLong>>);
}
