// Mocks generated by Mockito 5.1.0 from annotations
// in weather/test/features/weather/data/repositories/weather_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather/core/network/network_info.dart' as _i6;
import 'package:weather/core/utils/lat_long.dart' as _i5;
import 'package:weather/features/weather/data/datasources/weather_remote_data_source.dart'
    as _i3;
import 'package:weather/features/weather/data/models/weather_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWeatherModel_0 extends _i1.Fake implements _i2.WeatherModel {}

/// A class which mocks [WeatherRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRemoteDataSource extends _i1.Mock
    implements _i3.WeatherRemoteDataSource {
  MockWeatherRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.WeatherModel> getWeather(_i5.LatLong? latLong) =>
      (super.noSuchMethod(Invocation.method(#getWeather, [latLong]),
              returnValue:
                  Future<_i2.WeatherModel>.value(_FakeWeatherModel_0()))
          as _i4.Future<_i2.WeatherModel>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
